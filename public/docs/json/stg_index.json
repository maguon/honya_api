{
  "swagger": "2.0",
  "info": {
    "description": "This is a api docs for honya`logistics and finance`.  ",
    "version": "1.0.0",
    "title": "Honya API Docs",
    "termsOfService": "http://myxxjs.com",
    "contact": {
      "email": "info@myxxjs.com"
    },
    "license": {
      "name": "Github.com",
      "url": "https://github.com/maguon/honya_api/blob/master/LICENSE"
    }
  },
  "host": "stg.myxxjs.com:8001",
  "basePath": "/api",
  "tags": [
    {
      "name": "admin",
      "description": "Admin of log api"
    },
    {
      "name": "user",
      "description": "User of log api"
    },
    {
      "name":"truck",
      "description":"Truck of log api"
    },
    {
      "name":"drive",
      "description":"Drive of log api"
    },
    {
      "name":"company",
      "description":"Company of log api"
    },
    {
      "name":"city",
      "description":"City of log api"
    },
    {
      "name":"storage",
      "description":"Storage of log api"
    },
    {
      "name":"car",
      "description":"Car of log api"
    },
    {
      "name":"entrust",
      "description":"Entrust of log api"
    },
    {
      "name":"port",
      "description":"Port of log api"
    },
    {
      "name":"ship",
      "description":"Ship of log api"
    },
    {
      "name":"payment",
      "description":"Payment of log api"
    },
    {
      "name":"loan",
      "description":"Loan of log api"
    },
    {
      "name":"credit",
      "description":"Credit of log api"
    },
    {
      "name":"app",
      "description":"app version"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/admin/do/login": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Admin user do login",
        "description": "",
        "operationId": "admin login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Admin base info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/admin"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "query admin user info",
        "description": "Get admin user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "update admin user info",
        "description": "update admin user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "admin",
            "in": "body",
            "description": "admin base info:name,mobile and remark is needed .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/admin"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/password": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "update admin user password",
        "description": "update admin user password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "password",
            "in": "body",
            "description": "admin base info:origin and new password is needed .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/password"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query  user list",
        "description": "query user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "user id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "mobile",
            "in": "query",
            "description": "user mobile",
            "required": false,
            "type": "string"

          },
          {
            "name": "realName",
            "in": "query",
            "description": "real name",
            "required": false,
            "type": "string"

          },
          {
            "name": "type",
            "in": "query",
            "description": "user type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "user status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query  user list",
        "description": "query user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "userId",
            "in": "query",
            "description": "user id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "mobile",
            "in": "query",
            "description": "user mobile",
            "required": false,
            "type": "string"

          },
          {
            "name": "realName",
            "in": "query",
            "description": "real name",
            "required": false,
            "type": "string"

          },
          {
            "name": "type",
            "in": "query",
            "description": "user type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "user status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "admin create user",
        "description": "admin create user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "admin update user info",
        "description": "admin update user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/status/{status}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "admin update user status",
        "description": "admin update user status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "path",
            "description": "user status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/userLogin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user login",
        "description": "user sign in",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query user profile",
        "description": "query user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/token/{token}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get user new token",
        "description": "change  user token",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "token",
            "in": "path",
            "description": "token",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update user password",
        "description": "update user password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "password",
            "in": "body",
            "description": "user base info:origin and new password is needed .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/password"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/truck": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truck list",
        "description": "query truck",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brand id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "companyId",
            "in": "query",
            "description": "company id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckStatus",
            "in": "query",
            "description": "truck status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "number",
            "in": "query",
            "description": "number",
            "required": false,
            "type": "string"

          },
          {
            "name": "operateType",
            "in": "query",
            "description": "operate type",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      },
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create truck",
        "description": "user create truck",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truck",
            "in": "body",
            "description": "truck info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/company/{companyId}/firstCount": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query first count",
        "description": "query first count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "companyId",
            "in": "path",
            "description": "company id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/first"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/user/{userId}/company/{companyId}/trailerCount": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query trailer count",
        "description": "query trailer count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "companyId",
            "in": "path",
            "description": "company id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/trailer"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update truck info",
        "description": "update truck info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truck",
            "in": "body",
            "description": "truck info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truck"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/TruckDriveRel": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update TruckDrive rel",
        "description": "update TruckDrive rel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/truckStatus/{truckStatus}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "user update truck status",
        "description": "user update truck status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckStatus",
            "in": "path",
            "description": "truck status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/brand": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  brand list",
        "description": "query brand",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "query",
            "description": "brand id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "brandName",
            "in": "query",
            "description": "brand name",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/brand"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid brand id"
          }
        }
      }
    },
    "/user/{userId}/brand": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create brand",
        "description": "user create brand",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "brand",
            "in": "body",
            "description": "brand info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid brand id"
          }
        }
      }
    },
    "/user/{userId}/brand/{brandId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update brand info",
        "description": "update brand info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "brandId",
            "in": "path",
            "description": "brand id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "brand",
            "in": "body",
            "description": "brand info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/brand"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid brand id"
          }
        }
      }
    },
    "/user/{userId}/drive": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query  drive list",
        "description": "query drive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "companyName",
            "in": "query",
            "description": "company name",
            "required": false,
            "type": "string"

          },
          {
            "name": "operateType",
            "in": "query",
            "description": "operate type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveStatus",
            "in": "query",
            "description": "drive status",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/drive"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      },
      "post": {
        "tags": [
          "drive"
        ],
        "summary": "user create drive",
        "description": "user create drive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "drive",
            "in": "body",
            "description": "drive info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/drive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/user/{userId}/company/{companyId}/driveCount": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query drive count",
        "description": "query drive count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "companyId",
            "in": "path",
            "description": "company id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/drive"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/user/{userId}/drive/{driveId}": {
      "put": {
        "tags": [
          "drive"
        ],
        "summary": "update drive info",
        "description": "update drive info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "path",
            "description": "drive id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "drive",
            "in": "body",
            "description": "drive info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/drive"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/user/{userId}/drive/{driveId}/driveStatus/{driveStatus}": {
      "put": {
        "tags": [
          "drive"
        ],
        "summary": "user update drive status",
        "description": "user update drive status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "path",
            "description": "drive id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveStatus",
            "in": "path",
            "description": "drive status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/user/{userId}/company": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "query  company list",
        "description": "query company",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "companyId",
            "in": "query",
            "description": "company id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "companyName",
            "in": "query",
            "description": "company name",
            "required": false,
            "type": "string"

          },
          {
            "name": "operateType",
            "in": "query",
            "description": "operate type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "contacts",
            "in": "query",
            "description": "contacts type",
            "required": false,
            "type": "string"

          },
          {
            "name": "cityId",
            "in": "query",
            "description": "city id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/company"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      },
      "post": {
        "tags": [
          "company"
        ],
        "summary": "user create company",
        "description": "user create company",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "company",
            "in": "body",
            "description": "company info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/user/{userId}/company/{companyId}": {
      "put": {
        "tags": [
          "company"
        ],
        "summary": "update company info",
        "description": "update company info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "companyId",
            "in": "path",
            "description": "company id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "company",
            "in": "body",
            "description": "company info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/user/{userId}/city": {
      "get": {
        "tags": [
          "city"
        ],
        "summary": "query  city list",
        "description": "query city",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "cityId",
            "in": "query",
            "description": "city id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "cityName",
            "in": "query",
            "description": "city name",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/city"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid city id"
          }
        }
      },
      "post": {
        "tags": [
          "city"
        ],
        "summary": "user create city",
        "description": "user create city",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "city",
            "in": "body",
            "description": "city info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/city"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid city id"
          }
        }
      }
    },
    "/user/{userId}/city/{cityId}": {
      "put": {
        "tags": [
          "city"
        ],
        "summary": "update city info",
        "description": "update city info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "cityId",
            "in": "path",
            "description": "city id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "city",
            "in": "body",
            "description": "city info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/city"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid city id"
          }
        }
      }
    },
    "/storage": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storage list",
        "description": "query storage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageName",
            "in": "query",
            "description": "storage name",
            "required": false,
            "type": "string"

          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "storage status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageDate": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageDate list",
        "description": "query storageDate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageName",
            "in": "query",
            "description": "storage name",
            "required": false,
            "type": "string"

          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "date start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "date end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateStartMonth",
            "in": "query",
            "description": "date startMonth",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateEndMonth",
            "in": "query",
            "description": "date endMonth",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageDate"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageCount": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageCount",
        "description": "query storageCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "date start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "date end",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageCount"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageTotalMonth": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageTotalMonth list",
        "description": "query storageTotalMonth",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "total year",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageTotalMonth"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageTotalDay": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageTotalDay list",
        "description": "query storageTotalDay",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "total year",
            "required": false,
            "type": "integer"

          },
          {
            "name": "month",
            "in": "query",
            "description": "total month",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageTotalDay"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/admin/{adminId}/storage": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "admin create storage",
        "description": "admin create storage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storage",
            "in": "body",
            "description": "storage info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/admin/{adminId}/storage/{storageId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storage info",
        "description": "update storage info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storage id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storage",
            "in": "body",
            "description": "storage info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/admin/{adminId}/storage/{storageId}/storageStatus/{storageStatus}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "admin update storage status",
        "description": "admin update storage status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storage id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageStatus",
            "in": "path",
            "description": "storage status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageArea": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageArea list",
        "description": "query storageArea",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaName",
            "in": "query",
            "description": "area name",
            "required": false,
            "type": "string"

          },
          {
            "name": "areaStatus",
            "in": "query",
            "description": "area status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageArea"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageArea id"
          }
        }
      }
    },
    "/user/{userId}/storage/{storageId}/storageArea": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "create storageArea",
        "description": "create storageArea",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storage Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageArea",
            "in": "body",
            "description": "storageArea info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageArea id"
          }
        }
      }
    },
    "/user/{userId}/storageArea/{areaId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storageArea info",
        "description": "update storageArea info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "path",
            "description": "area id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageArea",
            "in": "body",
            "description": "storageArea info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageArea"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageArea id"
          }
        }
      }
    },
    "/user/{userId}/storageArea/{areaId}/areaStatus/{areaStatus}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storageArea status",
        "description": "update storageArea status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "path",
            "description": "area id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaStatus",
            "in": "path",
            "description": "area status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageArea id"
          }
        }
      }
    },
    "/storageParking": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageParking list",
        "description": "query storageParking",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageParking"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageParkingRow": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageParkingRow list",
        "description": "query storageParkingRow",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageParking"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageParking id"
          }
        }
      }
    },
    "/storageParkingCol": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageParkingCol list",
        "description": "query storageParkingCol",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "row",
            "in": "query",
            "description": "row",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageParking"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageParking id"
          }
        }
      }
    },
    "/storageParkingLot": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageParkingLot list",
        "description": "query storageParkingLot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "row",
            "in": "query",
            "description": "row",
            "required": false,
            "type": "integer"

          },
          {
            "name": "col",
            "in": "query",
            "description": "col",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageParking"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageParking id"
          }
        }
      }
    },
    "/storageParkingBalanceCount": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageParkingBalance count",
        "description": "query storageParkingBalanceCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageParking"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageParking id"
          }
        }
      }
    },
    "/storage/{storageId}/makeStat": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageParking make list",
        "description": "query storageParking make",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "path",
            "description": "storage id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageParking"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/user/{userId}/storageParking/{parkingId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storageParking info",
        "description": "update storageParking info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "parkingId",
            "in": "path",
            "description": "parking id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parking id"
          }
        }
      }
    },
    "/storageOrder": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageOrder list",
        "description": "query storageOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageOrderId",
            "in": "query",
            "description": "storageOrder id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "enterStart",
            "in": "query",
            "description": "enter start",
            "required": false,
            "type": "string"

          },
          {
            "name": "enterEnd",
            "in": "query",
            "description": "enter end",
            "required": false,
            "type": "string"

          },
          {
            "name": "realStart",
            "in": "query",
            "description": "real start",
            "required": false,
            "type": "string"

          },
          {
            "name": "realEnd",
            "in": "query",
            "description": "real end",
            "required": false,
            "type": "string"

          },
          {
            "name": "orderStatus",
            "in": "query",
            "description": "order status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageOrder"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageOrder id"
          }
        }
      }
    },
    "/storageOrderCount": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageOrder count",
        "description": "query storageOrderCount",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "orderStatus",
            "in": "query",
            "description": "order status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageOrder"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageOrder id"
          }
        }
      }
    },
    "/storageOrder.csv": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageOrder.csv",
        "description": "query storageOrder csv",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageOrderId",
            "in": "query",
            "description": "storageOrder id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "enterStart",
            "in": "query",
            "description": "enter start",
            "required": false,
            "type": "string"

          },
          {
            "name": "enterEnd",
            "in": "query",
            "description": "enter end",
            "required": false,
            "type": "string"

          },
          {
            "name": "realStart",
            "in": "query",
            "description": "real start",
            "required": false,
            "type": "string"

          },
          {
            "name": "realEnd",
            "in": "query",
            "description": "real end",
            "required": false,
            "type": "string"

          },
          {
            "name": "orderStatus",
            "in": "query",
            "description": "order status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageOrder"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageOrder id"
          }
        }
      }
    },
    "/user/{userId}/storageOrder/{storageOrderId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storageOrder info",
        "description": "update storageOrder info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageOrderId",
            "in": "path",
            "description": "storageOrder id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageOrder",
            "in": "body",
            "description": "storageOrder info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageOrder"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageOrder id"
          }
        }
      }
    },
    "/user/{userId}/storageOrder/{storageOrderId}/orderStatus/{orderStatus}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storageOrder status",
        "description": "update storageOrder status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageOrderId",
            "in": "path",
            "description": "storageOrder id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "orderStatus",
            "in": "path",
            "description": "order status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageOrder id"
          }
        }
      }
    },
    "/user/{userId}/car": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car list",
        "description": "query car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "msoStatus",
            "in": "query",
            "description": "mso status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "enterStart",
            "in": "query",
            "description": "enter start",
            "required": false,
            "type": "string"

          },
          {
            "name": "enterEnd",
            "in": "query",
            "description": "enter end",
            "required": false,
            "type": "string"

          },
          {
            "name": "planStart",
            "in": "query",
            "description": "plan start",
            "required": false,
            "type": "string"

          },
          {
            "name": "planEnd",
            "in": "query",
            "description": "plan end",
            "required": false,
            "type": "string"

          },
          {
            "name": "realStart",
            "in": "query",
            "description": "real start",
            "required": false,
            "type": "string"

          },
          {
            "name": "realEnd",
            "in": "query",
            "description": "real end",
            "required": false,
            "type": "string"

          },
          {
            "name": "relStatus",
            "in": "query",
            "description": "rel status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "active",
            "in": "query",
            "description": "rel active",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipTransStatus",
            "in": "query",
            "description": "shipTrans status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipCompanyId",
            "in": "query",
            "description": "shipCompany id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "container",
            "in": "query",
            "description": "container",
            "required": false,
            "type": "string"

          },
          {
            "name": "startShipDateStart",
            "in": "query",
            "description": "startShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "startShipDateEnd",
            "in": "query",
            "description": "startShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateStart",
            "in": "query",
            "description": "endShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateEnd",
            "in": "query",
            "description": "endShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualStartDateStart",
            "in": "query",
            "description": "actualStartDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualStartDateEnd",
            "in": "query",
            "description": "actualStartDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateStart",
            "in": "query",
            "description": "actualEndDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateEnd",
            "in": "query",
            "description": "actualEndDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      },
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create car",
        "description": "user create car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "car",
            "in": "body",
            "description": "car info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/car"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carList": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car list",
        "description": "query car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "purchaseType",
            "in": "query",
            "description": "purchase type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOn start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOn end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/car.csv": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car.csv",
        "description": "query car.csv",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "msoStatus",
            "in": "query",
            "description": "mso status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "enterStart",
            "in": "query",
            "description": "enter start",
            "required": false,
            "type": "string"

          },
          {
            "name": "enterEnd",
            "in": "query",
            "description": "enter end",
            "required": false,
            "type": "string"

          },
          {
            "name": "planStart",
            "in": "query",
            "description": "plan start",
            "required": false,
            "type": "string"

          },
          {
            "name": "planEnd",
            "in": "query",
            "description": "plan end",
            "required": false,
            "type": "string"

          },
          {
            "name": "realStart",
            "in": "query",
            "description": "real start",
            "required": false,
            "type": "string"

          },
          {
            "name": "realEnd",
            "in": "query",
            "description": "real end",
            "required": false,
            "type": "string"

          },
          {
            "name": "relStatus",
            "in": "query",
            "description": "rel status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "active",
            "in": "query",
            "description": "rel active",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carStorageShipTrans.csv": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carStorageShipTrans csv",
        "description": "query carStorageShipTrans.csv",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"
          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"
          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "msoStatus",
            "in": "query",
            "description": "mso status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "enterStart",
            "in": "query",
            "description": "enter start",
            "required": false,
            "type": "string"
          },
          {
            "name": "enterEnd",
            "in": "query",
            "description": "enter end",
            "required": false,
            "type": "string"
          },
          {
            "name": "planStart",
            "in": "query",
            "description": "plan start",
            "required": false,
            "type": "string"
          },
          {
            "name": "planEnd",
            "in": "query",
            "description": "plan end",
            "required": false,
            "type": "string"
          },
          {
            "name": "realStart",
            "in": "query",
            "description": "real start",
            "required": false,
            "type": "string"
          },
          {
            "name": "realEnd",
            "in": "query",
            "description": "real end",
            "required": false,
            "type": "string"
          },
          {
            "name": "relStatus",
            "in": "query",
            "description": "rel status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "active",
            "in": "query",
            "description": "rel active",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "shipTransStatus",
            "in": "query",
            "description": "shipTrans status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "shipCompanyId",
            "in": "query",
            "description": "shipCompany id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "container",
            "in": "query",
            "description": "container",
            "required": false,
            "type": "string"
          },
          {
            "name": "startShipDateStart",
            "in": "query",
            "description": "startShipDate start",
            "required": false,
            "type": "string"
          },
          {
            "name": "startShipDateEnd",
            "in": "query",
            "description": "startShipDate end",
            "required": false,
            "type": "string"
          },
          {
            "name": "endShipDateStart",
            "in": "query",
            "description": "endShipDate start",
            "required": false,
            "type": "string"
          },
          {
            "name": "endShipDateEnd",
            "in": "query",
            "description": "endShipDate end",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carStorageCount": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carStorage count",
        "description": "query carStorageCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "relStatus",
            "in": "query",
            "description": "rel status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "active",
            "in": "query",
            "description": "rel active",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carMortgageStatusCount": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carMortgageStatus count",
        "description": "query carMortgageStatusCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "relStatus",
            "in": "query",
            "description": "rel status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "active",
            "in": "query",
            "description": "rel active",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carPurchaseCount": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carPurchase count",
        "description": "query carPurchaseCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "purchaseType",
            "in": "query",
            "description": "purchase type",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/car/{carId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update car info",
        "description": "update car info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "car",
            "in": "body",
            "description": "car info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/car"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/car/{carId}/valuationMso": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update car valuationMso",
        "description": "update car valuationMso",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "car",
            "in": "body",
            "description": "car valuationMso",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carValuationMso"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/admin/{admin}/car": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car list",
        "description": "query car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "msoStatus",
            "in": "query",
            "description": "mso status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "enterStart",
            "in": "query",
            "description": "enter start",
            "required": false,
            "type": "string"

          },
          {
            "name": "enterEnd",
            "in": "query",
            "description": "enter end",
            "required": false,
            "type": "string"

          },
          {
            "name": "planStart",
            "in": "query",
            "description": "plan start",
            "required": false,
            "type": "string"

          },
          {
            "name": "planEnd",
            "in": "query",
            "description": "plan end",
            "required": false,
            "type": "string"

          },
          {
            "name": "realStart",
            "in": "query",
            "description": "real start",
            "required": false,
            "type": "string"

          },
          {
            "name": "realEnd",
            "in": "query",
            "description": "real end",
            "required": false,
            "type": "string"

          },
          {
            "name": "relStatus",
            "in": "query",
            "description": "rel status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "active",
            "in": "query",
            "description": "rel active",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/admin/{adminId}/car/{carId}/vin": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update car vin",
        "description": "update car vin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "body",
            "description": "car vin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vin"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carMake": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carMake list",
        "description": "query carMake",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "makeName",
            "in": "query",
            "description": "make name",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carMake"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid make id"
          }
        }
      }
    },
    "/user/{userId}/carStorageRel": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create carStorageRel",
        "description": "user create carStorageRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carStorageRel",
            "in": "body",
            "description": "carStorageRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carStorageRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carStorageRel id"
          }
        }
      }
    },
    "/user/{userId}/car/{carId}/vin/{vin}/carStorageRel": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "user put carStorageRel",
        "description": "user put carStorageRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "path",
            "description": "car vin",
            "required": true,
            "type": "string"

          },
          {
            "name": "againCarStorageRel",
            "in": "body",
            "description": "againCarStorageRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/againCarStorageRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid againCarStorageRel id"
          }
        }
      }
    },
    "/user/{userId}/carStorageRel/{relId}/relStatus/{relStatus}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carStorageRel status",
        "description": "update carStorageRel status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "relId",
            "in": "path",
            "description": "rel id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "relStatus",
            "in": "path",
            "description": "rel status",
            "required": true,
            "type": "integer"

          },
          {
            "name": "parkingId",
            "in": "query",
            "description": "parking id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carStorageRel id"
          }
        }
      }
    },
    "/user/{userId}/carStorageRel/{relId}/planOutTime": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update rel planOutTime",
        "description": "update rel planOutTime",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "relId",
            "in": "path",
            "description": "rel id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "planOutTime",
            "in": "body",
            "description": "rel planOutTime",
            "required": true,
            "schema": {
              "$ref": "#/definitions/planOutTime"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid rel id"
          }
        }
      }
    },
    "/carMake": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carMake list",
        "description": "query carMake",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "makeName",
            "in": "query",
            "description": "make name",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carMake"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid make id"
          }
        }
      }
    },
    "/admin/{adminId}/carMake": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "admin create carMake",
        "description": "admin create carMake",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carMake",
            "in": "body",
            "description": "carMake info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carMake"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid make id"
          }
        }
      }
    },
    "/user/{userId}/carMake": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create carMake",
        "description": "user create carMake",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carMake",
            "in": "body",
            "description": "carMake info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carMake"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid make id"
          }
        }
      }
    },
    "/admin/{adminId}/carMake/{makeId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carMake info",
        "description": "update carMake info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "makeId",
            "in": "path",
            "description": "make id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carMake",
            "in": "body",
            "description": "carMake info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carMake"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid make id"
          }
        }
      }
    },
    "/user/{userId}/carMake/{makeId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carMake info",
        "description": "update carMake info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "makeId",
            "in": "path",
            "description": "make id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carMake",
            "in": "body",
            "description": "carMake info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carMake"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid make id"
          }
        }
      }
    },
    "/carMake/{makeId}/carModel": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carModel list",
        "description": "query carModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "makeId",
            "in": "path",
            "description": "make id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carModel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/admin/{adminId}/carMake/{makeId}/carModel": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "admin create carModel",
        "description": "admin create carModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "makeId",
            "in": "path",
            "description": "make id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carModel",
            "in": "body",
            "description": "carModel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/user/{userId}/carMake/{makeId}/carModel": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create carModel",
        "description": "user create carModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "makeId",
            "in": "path",
            "description": "make id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carModel",
            "in": "body",
            "description": "carModel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/admin/{adminId}/carModel/{modelId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carModel info",
        "description": "update carModel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "path",
            "description": "model id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carModel",
            "in": "body",
            "description": "carModel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carModel"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/user/{userId}/carModel/{modelId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carModel info",
        "description": "update carModel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "path",
            "description": "model id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carModel",
            "in": "body",
            "description": "carModel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carModel"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/admin/{adminId}/carModel/{modelId}/modelStatus/{modelStatus}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carModel status",
        "description": "update carModel status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "path",
            "description": "model id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "modelStatus",
            "in": "path",
            "description": "model status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/user/{userId}/carModel/{modelId}/modelStatus/{modelStatus}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carModel status",
        "description": "update carModel status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "path",
            "description": "model id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "modelStatus",
            "in": "path",
            "description": "model status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/carKeyCabinet": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query carKeyCabinet list",
        "description": "query carKeyCabinet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carKeyCabinetId",
            "in": "query",
            "description": "carKeyCabinet id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "keyCabinetName",
            "in": "query",
            "description": "keyCabinet name",
            "required": false,
            "type": "string"

          },
          {
            "name": "keyCabinetStatus",
            "in": "query",
            "description": "keyCabinet status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carKeyCabinet"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyCabinet id"
          }
        }
      }
    },
    "/user/{userId}/carKeyCabinet": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create carKeyCabinet",
        "description": "user create carKeyCabinet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carKeyCabinet",
            "in": "body",
            "description": "carKeyCabinet info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carKeyCabinet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyCabinet id"
          }
        }
      }
    },
    "/user/{userId}/carKeyCabinet/{carKeyCabinetId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carKeyCabinet info",
        "description": "update carKeyCabinet info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carKeyCabinetId",
            "in": "path",
            "description": "carKeyCabinet id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carKeyCabinet",
            "in": "body",
            "description": "carKeyCabinet info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carKeyCabinet"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyCabinet id"
          }
        }
      }
    },
    "/user/{userId}/carKeyCabinet/{carKeyCabinetId}/keyCabinetStatus/{keyCabinetStatus}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update keyCabinet status",
        "description": "update keyCabinet status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carKeyCabinetId",
            "in": "path",
            "description": "carKeyCabinet id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "keyCabinetStatus",
            "in": "path",
            "description": "keyCabinet status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid keyCabinet id"
          }
        }
      }
    },
    "/carKeyCabinetArea": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carKeyCabinetArea list",
        "description": "query carKeyCabinetArea",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaName",
            "in": "query",
            "description": "area name",
            "required": false,
            "type": "string"

          },
          {
            "name": "areaStatus",
            "in": "query",
            "description": "area status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "carKeyCabinetId",
            "in": "query",
            "description": "carKeyCabinet id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carKeyCabinetArea"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyCabinetArea id"
          }
        }
      }
    },
    "/user/{userId}/carKeyCabinet/{carKeyCabinetId}/carKeyCabinetArea": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "create carKeyCabinetArea",
        "description": "create carKeyCabinetArea",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carKeyCabinetId",
            "in": "path",
            "description": "carKeyCabinet Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carKeyCabinetArea",
            "in": "body",
            "description": "carKeyCabinetArea info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carKeyCabinetArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyCabinetArea id"
          }
        }
      }
    },
    "/user/{userId}/carKeyCabinetArea/{areaId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carKeyCabinetArea info",
        "description": "update carKeyCabinetArea info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "path",
            "description": "area id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carKeyCabinetArea",
            "in": "body",
            "description": "carKeyCabinetArea info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carKeyCabinetArea"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyCabinetArea id"
          }
        }
      }
    },
    "/user/{userId}/carKeyCabinetArea/{areaId}/areaStatus/{areaStatus}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carKeyCabinetArea status",
        "description": "update carKeyCabinetArea status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "path",
            "description": "area id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaStatus",
            "in": "path",
            "description": "area status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyCabinetArea id"
          }
        }
      }
    },
    "/carKeyPosition": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carKeyPosition list",
        "description": "query carKeyPosition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carKeyCabinetId",
            "in": "query",
            "description": "carKeyCabinet id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carKeyPosition"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyPosition id"
          }
        }
      }
    },
    "/carKeyCabinet/{carKeyCabinetId}/carKeyPositionCount": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carKeyPosition count",
        "description": "query carKeyPositionCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carKeyCabinetId",
            "in": "path",
            "description": "carKeyCabinet id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carKeyPosition"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyPosition id"
          }
        }
      }
    },
    "/user/{userId}/carKeyPosition/{carKeyPositionId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carKeyPosition info",
        "description": "update carKeyPosition info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carKeyPositionId",
            "in": "path",
            "description": "carKeyPosition id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carKeyPosition",
            "in": "body",
            "description": "carKeyPosition info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carKeyPosition"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carKeyPosition id"
          }
        }
      }
    },
    "/entrust": {
      "get": {
        "tags": [
          "entrust"
        ],
        "summary": "query entrust list",
        "description": "query entrust",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustType",
            "in": "query",
            "description": "entrust type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shortName",
            "in": "query",
            "description": "short name",
            "required": false,
            "type": "string"

          },
          {
            "name": "entrustName",
            "in": "query",
            "description": "entrust name",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/entrust"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid entrust id"
          }
        }
      }
    },
    "/entrustBase": {
      "get": {
        "tags": [
          "entrust"
        ],
        "summary": "query entrust list",
        "description": "query entrust",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustType",
            "in": "query",
            "description": "entrust type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shortName",
            "in": "query",
            "description": "short name",
            "required": false,
            "type": "string"

          },
          {
            "name": "entrustName",
            "in": "query",
            "description": "entrust name",
            "required": false,
            "type": "string"

          },
          {
            "name": "contactsName",
            "in": "query",
            "description": "contacts name",
            "required": false,
            "type": "string"

          },
          {
            "name": "tel",
            "in": "query",
            "description": "entrust tel",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/entrust"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid entrust id"
          }
        }
      }
    },
    "/entrustCount": {
      "get": {
        "tags": [
          "entrust"
        ],
        "summary": "query entrust count",
        "description": "query entrustCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/entrust"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid entrust id"
          }
        }
      }
    },
    "/user/{userId}/entrust": {
      "post": {
        "tags": [
          "entrust"
        ],
        "summary": "user create entrust",
        "description": "user create entrust",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "entrust",
            "in": "body",
            "description": "entrust info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entrust"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid entrust id"
          }
        }
      }
    },
    "/user/{userId}/entrust/{entrustId}": {
      "put": {
        "tags": [
          "entrust"
        ],
        "summary": "update entrust info",
        "description": "update entrust info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "path",
            "description": "entrust id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "entrust",
            "in": "body",
            "description": "entrust info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entrust"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid entrust id"
          }
        }
      }
    },
    "/port": {
      "get": {
        "tags": [
          "port"
        ],
        "summary": "query port list",
        "description": "query port",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portId",
            "in": "query",
            "description": "port id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "countryId",
            "in": "query",
            "description": "country id",
            "required": false,
            "type": "string"

          },
          {
            "name": "portName",
            "in": "query",
            "description": "port name",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/port"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid port id"
          }
        }
      }
    },
    "/user/{userId}/port": {
      "post": {
        "tags": [
          "port"
        ],
        "summary": "user create port",
        "description": "user create port",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "port",
            "in": "body",
            "description": "port info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/port"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid port id"
          }
        }
      }
    },
    "/user/{userId}/port/{portId}": {
      "put": {
        "tags": [
          "port"
        ],
        "summary": "update port info",
        "description": "update port info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "portId",
            "in": "path",
            "description": "port id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "port",
            "in": "body",
            "description": "port info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/port"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid port id"
          }
        }
      }
    },
    "/shipCompany": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query shipCompany list",
        "description": "query shipCompany",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shipCompanyId",
            "in": "query",
            "description": "shipCompany id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipCompanyName",
            "in": "query",
            "description": "shipCompany name",
            "required": false,
            "type": "string"

          },
          {
            "name": "shipCompanyStatus",
            "in": "query",
            "description": "shipCompany status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipCompany"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipCompany id"
          }
        }
      }
    },
    "/user/{userId}/shipCompany": {
      "post": {
        "tags": [
          "ship"
        ],
        "summary": "user create shipCompany",
        "description": "user create shipCompany",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipCompany",
            "in": "body",
            "description": "shipCompany info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipCompany"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipCompany id"
          }
        }
      }
    },
    "/user/{userId}/shipCompany/{shipCompanyId}": {
      "put": {
        "tags": [
          "ship"
        ],
        "summary": "update shipCompany info",
        "description": "update shipCompany info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipCompanyId",
            "in": "path",
            "description": "shipCompany id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipCompany",
            "in": "body",
            "description": "shipCompany info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipCompany"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipCompany id"
          }
        }
      }
    },
    "/user/{userId}/shipCompany/{shipCompanyId}/shipCompanyStatus/{shipCompanyStatus}": {
      "put": {
        "tags": [
          "ship"
        ],
        "summary": "shipCompany update status",
        "description": "shipCompany update status",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipCompanyId",
            "in": "path",
            "description": "shipCompany id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipCompanyStatus",
            "in": "path",
            "description": "shipCompany status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipCompany id"
          }
        }
      }
    },
    "/shipTrans": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query shipTrans list",
        "description": "query shipTrans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shipTransId",
            "in": "query",
            "description": "shipTrans id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "startPortId",
            "in": "query",
            "description": "startPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "endPortId",
            "in": "query",
            "description": "endPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "startShipDateStart",
            "in": "query",
            "description": "startShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "startShipDateEnd",
            "in": "query",
            "description": "startShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "shipCompanyId",
            "in": "query",
            "description": "shipCompany id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipName",
            "in": "query",
            "description": "ship name",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateStart",
            "in": "query",
            "description": "endShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateEnd",
            "in": "query",
            "description": "endShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "container",
            "in": "query",
            "description": "container",
            "required": false,
            "type": "string"

          },
          {
            "name": "booking",
            "in": "query",
            "description": "booking",
            "required": false,
            "type": "string"

          },
          {
            "name": "tab",
            "in": "query",
            "description": "tab",
            "required": false,
            "type": "string"

          },
          {
            "name": "shipTransStatus",
            "in": "query",
            "description": "shipTrans status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "actualStartDateStart",
            "in": "query",
            "description": "actualStartDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualStartDateEnd",
            "in": "query",
            "description": "actualStartDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateStart",
            "in": "query",
            "description": "actualEndDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateEnd",
            "in": "query",
            "description": "actualEndDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTrans"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTrans id"
          }
        }
      }
    },
    "/shipTrans.csv": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query shipTrans csv",
        "description": "query shipTransCsv",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shipTransId",
            "in": "query",
            "description": "shipTrans id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "startPortId",
            "in": "query",
            "description": "startPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "endPortId",
            "in": "query",
            "description": "endPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "startShipDateStart",
            "in": "query",
            "description": "startShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "startShipDateEnd",
            "in": "query",
            "description": "startShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "shipCompanyId",
            "in": "query",
            "description": "shipCompany id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipName",
            "in": "query",
            "description": "ship name",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateStart",
            "in": "query",
            "description": "endShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateEnd",
            "in": "query",
            "description": "endShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "container",
            "in": "query",
            "description": "container",
            "required": false,
            "type": "string"

          },
          {
            "name": "booking",
            "in": "query",
            "description": "booking",
            "required": false,
            "type": "string"

          },
          {
            "name": "tab",
            "in": "query",
            "description": "tab",
            "required": false,
            "type": "string"

          },
          {
            "name": "shipTransStatus",
            "in": "query",
            "description": "shipTrans status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "actualStartDateStart",
            "in": "query",
            "description": "actualStartDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualStartDateEnd",
            "in": "query",
            "description": "actualStartDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateStart",
            "in": "query",
            "description": "actualEndDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateEnd",
            "in": "query",
            "description": "actualEndDate end",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTrans"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTrans id"
          }
        }
      }
    },
    "/shipTransStatDate": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query  shipTransStatDate list",
        "description": "query shipTransStatDate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yearMonth",
            "in": "query",
            "description": "yearMonth",
            "required": false,
            "type": "integer"

          },
          {
            "name": "yearMonthStart",
            "in": "query",
            "description": "yearMonth start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "yearMonthEnd",
            "in": "query",
            "description": "yearMonth end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "date start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "date end",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTransStatDate"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTrans id"
          }
        }
      }
    },
    "/shipTransCount": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query  shipTrans count",
        "description": "query shipTransCount",
        "produces": [
          "application/json"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTransCount"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTrans id"
          }
        }
      }
    },
    "/shipTransMonthStat": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query  shipTransMonth stat",
        "description": "query shipTransMonthStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTransMonthStat"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTrans id"
          }
        }
      }
    },
    "/shipTransDayStat": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query  shipTransDay stat",
        "description": "query shipTransDayStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTransDayStat"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTrans id"
          }
        }
      }
    },
    "/user/{userId}/shipTrans": {
      "post": {
        "tags": [
          "ship"
        ],
        "summary": "user create shipTrans",
        "description": "user create shipTrans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTrans",
            "in": "body",
            "description": "shipTrans info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipTrans"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTrans id"
          }
        }
      }
    },
    "/user/{userId}/shipTrans/{shipTransId}": {
      "put": {
        "tags": [
          "ship"
        ],
        "summary": "update shipTrans info",
        "description": "update shipTrans info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTransId",
            "in": "path",
            "description": "shipTrans id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTrans",
            "in": "body",
            "description": "shipTrans info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipTrans"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTrans id"
          }
        }
      }
    },
    "/user/{userId}/shipTrans/{shipTransId}/shipTransStatus/{shipTransStatus}": {
      "put": {
        "tags": [
          "ship"
        ],
        "summary": "update shipTrans status",
        "description": "update shipTrans status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTransId",
            "in": "path",
            "description": "shipTrans id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTransStatus",
            "in": "path",
            "description": "shipTrans status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTrans id"
          }
        }
      }
    },
    "/shipTransOrder": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query shipTransOrder list",
        "description": "query shipTransOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shortName",
            "in": "query",
            "description": "short name",
            "required": false,
            "type": "string"

          },
          {
            "name": "shipTransOrderId",
            "in": "query",
            "description": "shipTransOrder id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "orderStatus",
            "in": "query",
            "description": "order status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipTransId",
            "in": "query",
            "description": "shipTrans id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipCompanyId",
            "in": "query",
            "description": "shipCompany id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipName",
            "in": "query",
            "description": "ship name",
            "required": false,
            "type": "string"

          },
          {
            "name": "container",
            "in": "query",
            "description": "container",
            "required": false,
            "type": "string"

          },
          {
            "name": "startPortId",
            "in": "query",
            "description": "startPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "endPortId",
            "in": "query",
            "description": "endPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "startShipDateStart",
            "in": "query",
            "description": "startShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "startShipDateEnd",
            "in": "query",
            "description": "startShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateStart",
            "in": "query",
            "description": "endShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateEnd",
            "in": "query",
            "description": "endShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "booking",
            "in": "query",
            "description": "booking",
            "required": false,
            "type": "string"

          },
          {
            "name": "shipTransStatus",
            "in": "query",
            "description": "shipTrans status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "actualStartDateStart",
            "in": "query",
            "description": "actualStartDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualStartDateEnd",
            "in": "query",
            "description": "actualStartDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateStart",
            "in": "query",
            "description": "actualEndDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateEnd",
            "in": "query",
            "description": "actualEndDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTransOrder"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTransOrder id"
          }
        }
      }
    },
    "/shipTransOrder.csv": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query shipTransOrder csv",
        "description": "query shipTransOrderCsv",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shortName",
            "in": "query",
            "description": "short name",
            "required": false,
            "type": "string"

          },
          {
            "name": "shipTransOrderId",
            "in": "query",
            "description": "shipTransOrder id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "orderStatus",
            "in": "query",
            "description": "order status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipCompanyId",
            "in": "query",
            "description": "shipCompany id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipName",
            "in": "query",
            "description": "ship name",
            "required": false,
            "type": "string"

          },
          {
            "name": "container",
            "in": "query",
            "description": "container",
            "required": false,
            "type": "string"

          },
          {
            "name": "startPortId",
            "in": "query",
            "description": "startPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "endPortId",
            "in": "query",
            "description": "endPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "startShipDateStart",
            "in": "query",
            "description": "startShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "startShipDateEnd",
            "in": "query",
            "description": "startShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateStart",
            "in": "query",
            "description": "endShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateEnd",
            "in": "query",
            "description": "endShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "booking",
            "in": "query",
            "description": "booking",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualStartDateStart",
            "in": "query",
            "description": "actualStartDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualStartDateEnd",
            "in": "query",
            "description": "actualStartDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateStart",
            "in": "query",
            "description": "actualEndDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualEndDateEnd",
            "in": "query",
            "description": "actualEndDate end",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTransOrder"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTransOrder id"
          }
        }
      }
    },
    "/shipTransOrderCount": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query  shipTransOrder count",
        "description": "query shipTransOrderCount",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "orderStatus",
            "in": "query",
            "description": "order status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTransOrder"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTransOrder id"
          }
        }
      }
    },
    "/user/{userId}/shipTransOrder": {
      "post": {
        "tags": [
          "ship"
        ],
        "summary": "user create shipTransOrder",
        "description": "user create shipTransOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTransOrder",
            "in": "body",
            "description": "shipTransOrder info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipTransOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTransOrder id"
          }
        }
      }
    },
    "/user/{userId}/shipTransOrder/{shipTransOrderId}/ShipTransOrderFee": {
      "put": {
        "tags": [
          "ship"
        ],
        "summary": "update shipTransOrder info",
        "description": "update shipTransOrder info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTransOrderId",
            "in": "path",
            "description": "shipTransOrder id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTransOrderFee",
            "in": "body",
            "description": "shipTransOrderFee info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipTransOrderFee"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTransOrder id"
          }
        }
      }
    },
    "/user/{userId}/shipTransOrder/{shipTransOrderId}/orderStatus/{orderStatus}": {
      "put": {
        "tags": [
          "ship"
        ],
        "summary": "update shipTransOrder status",
        "description": "update shipTransOrder status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTransOrderId",
            "in": "path",
            "description": "shipTransOrder id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "orderStatus",
            "in": "path",
            "description": "order status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTransOrder id"
          }
        }
      }
    },
    "/shipTransCarRel": {
      "get": {
        "tags": [
          "ship"
        ],
        "summary": "query shipTransCarRel list",
        "description": "query shipTransCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shipTransId",
            "in": "query",
            "description": "shipTrans id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "startPortId",
            "in": "query",
            "description": "startPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "endPortId",
            "in": "query",
            "description": "endPort id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "orderStatus",
            "in": "query",
            "description": "order status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "startShipDateStart",
            "in": "query",
            "description": "startShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "startShipDateEnd",
            "in": "query",
            "description": "startShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "endShipDateStart",
            "in": "query",
            "description": "endShipDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "endShipDateEnd",
            "in": "query",
            "description": "endShipDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "shipCompanyId",
            "in": "query",
            "description": "shipCompany id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipName",
            "in": "query",
            "description": "ship name",
            "required": false,
            "type": "string"

          },
          {
            "name": "container",
            "in": "query",
            "description": "container",
            "required": false,
            "type": "string"

          },
          {
            "name": "booking",
            "in": "query",
            "description": "booking",
            "required": false,
            "type": "string"

          },
          {
            "name": "tab",
            "in": "query",
            "description": "tab",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/shipTransCarRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTransCarRel id"
          }
        }
      }
    },
    "/user/{userId}/shipTransCarRel": {
      "post": {
        "tags": [
          "ship"
        ],
        "summary": "user create shipTransCarRel",
        "description": "user create shipTransCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "shipTransCarRel",
            "in": "body",
            "description": "shipTransCarRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/shipTransCarRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid shipTransCarRel id"
          }
        }
      }
    },
    "/user/{userId}/shipTrans/{shipTransId}/car/{carId}": {
      "delete": {
        "tags": [
          "ship"
        ],
        "summary": "Deletes a shipTransCarRel",
        "description": "",
        "operationId": "deleteShipTransCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "shipTransId",
            "in": "path",
            "description": "shipTrans id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },

    "/payment": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "query  payment list",
        "description": "query payment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "description": "payment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustType",
            "in": "query",
            "description": "entrust type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "payment status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "paymentType",
            "in": "query",
            "description": "payment type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "number",
            "in": "query",
            "description": "number",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOn start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOn end",
            "required": false,
            "type": "string"

          },
          {
            "name": "storageOrderId",
            "in": "query",
            "description": "storageOrder id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipTransOrderId",
            "in": "query",
            "description": "shipTransOrder id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/payment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid payment id"
          }
        }
      }
    },
    "/paymentCount": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "query  payment count",
        "description": "query paymentCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "payment status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/payment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid payment id"
          }
        }
      }
    },
    "/payment.csv": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "query  payment csv",
        "description": "query payment.csv",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "description": "payment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustType",
            "in": "query",
            "description": "entrust type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "payment status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "paymentType",
            "in": "query",
            "description": "payment type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "number",
            "in": "query",
            "description": "number",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOn start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOn end",
            "required": false,
            "type": "string"

          },
          {
            "name": "storageOrderId",
            "in": "query",
            "description": "storageOrder id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shipTransOrderId",
            "in": "query",
            "description": "shipTransOrder id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/payment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid payment id"
          }
        }
      }
    },
    "/user/{userId}/payment": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "user create payment",
        "description": "user create payment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "payment",
            "in": "body",
            "description": "payment info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/payment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid payment id"
          }
        }
      }
    },
    "/user/{userId}/paymentOrder": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "user create paymentOrder",
        "description": "user create paymentOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentOrder",
            "in": "body",
            "description": "paymentOrder info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid payment id"
          }
        }
      }
    },
    "/user/{userId}/payment/{paymentId}": {
      "put": {
        "tags": [
          "payment"
        ],
        "summary": "update payment info",
        "description": "update payment info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "payment id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentOrder",
            "in": "body",
            "description": "paymentOrder info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentOrder"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid payment id"
          }
        }
      }
    },
    "/user/{userId}/payment/{paymentId}/paymentStatus/{paymentStatus}": {
      "put": {
        "tags": [
          "payment"
        ],
        "summary": "update payment status",
        "description": "update payment status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "payment id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentStatus",
            "in": "path",
            "description": "payment status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid payment id"
          }
        }
      }
    },
    "/paymentStorageOrderRel": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "query  paymentStorageOrderRel list",
        "description": "query paymentStorageOrderRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "description": "payment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/paymentStorageOrderRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid paymentStorageOrderRel id"
          }
        }
      }
    },
    "/user/{userId}/paymentStorageOrderRel": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "user create paymentStorageOrderRel",
        "description": "user create paymentStorageOrderRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentStorageOrderRel",
            "in": "body",
            "description": "paymentStorageOrderRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentStorageOrderRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid paymentStorageOrderRel id"
          }
        }
      }
    },
    "/user/{userId}/storageOrder/{storageOrderId}/payment/{paymentId}": {
      "delete": {
        "tags": [
          "payment"
        ],
        "summary": "Deletes a paymentStorageOrderRel",
        "description": "",
        "operationId": "deletePaymentStorageOrderRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageOrderId",
            "in": "path",
            "description": "storageOrder id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "payment id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/paymentShipOrderRel": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "query  paymentShipOrderRel list",
        "description": "query paymentShipOrderRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "description": "payment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/paymentShipOrderRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid paymentShipOrderRel id"
          }
        }
      }
    },
    "/user/{userId}/paymentShipOrderRel": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "user create paymentShipOrderRel",
        "description": "user create paymentShipOrderRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentShipOrderRel",
            "in": "body",
            "description": "paymentShipOrderRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentShipOrderRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid paymentShipOrderRel id"
          }
        }
      }
    },
    "/user/{userId}/shipTransOrder/{shipTransOrderId}/payment/{paymentId}": {
      "delete": {
        "tags": [
          "payment"
        ],
        "summary": "Deletes a paymentShipOrderRel",
        "description": "",
        "operationId": "deletePaymentShipOrderRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "shipTransOrderId",
            "in": "path",
            "description": "shipTransOrder id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "payment id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/paymentLoanRepRel": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "query  paymentLoanRepRel list",
        "description": "query paymentLoanRepRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repaymentId",
            "in": "query",
            "description": "repayment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/paymentLoanRepRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid paymentLoanRepRel id"
          }
        }
      }
    },
    "/repayment/{repaymentId}/paymentRepMoney": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "query  paymentRep money",
        "description": "query paymentRepMoney",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repaymentId",
            "in": "path",
            "description": "repayment id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/paymentLoanRepRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid paymentLoanRepRel id"
          }
        }
      }
    },
    "/user/{userId}/paymentLoanRepRel": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "user create paymentLoanRepRel",
        "description": "user create paymentLoanRepRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentLoanRepRel",
            "in": "body",
            "description": "paymentLoanRepRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentLoanRepRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid paymentLoanRepRel id"
          }
        }
      }
    },
    "/user/{userId}/repayment/{repaymentId}/payment/{paymentId}/paymentRepMoney": {
      "put": {
        "tags": [
          "payment"
        ],
        "summary": "update paymentRepMoney info",
        "description": "update paymentRepMoney info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repaymentId",
            "in": "path",
            "description": "repayment id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "payment id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentRepMoney",
            "in": "body",
            "description": "paymentRepMoney info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentRepMoney"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid paymentLoanRepRel id"
          }
        }
      }
    },
    "/user/{userId}/repayment/{repaymentId}/payment/{paymentId}": {
      "delete": {
        "tags": [
          "payment"
        ],
        "summary": "Deletes a paymentLoanRepRel",
        "description": "",
        "operationId": "deletePaymentLoanRepRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "repaymentId",
            "in": "path",
            "description": "repayment id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "payment id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/loan": {
      "get": {
        "tags": [
          "loan"
        ],
        "summary": "query  loan list",
        "description": "query loan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "loanId",
            "in": "query",
            "description": "loan id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustType",
            "in": "query",
            "description": "entrust type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "loanStatus",
            "in": "query",
            "description": "loan status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "loanStatusArr",
            "in": "query",
            "description": "loanStatus arr",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOn start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOn end",
            "required": false,
            "type": "string"

          },
          {
            "name": "loanEndDateStart",
            "in": "query",
            "description": "loanEndDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "loanEndDateEnd",
            "in": "query",
            "description": "loanEndDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/loan"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loan id"
          }
        }
      }
    },
    "/loanNotCount": {
      "get": {
        "tags": [
          "loan"
        ],
        "summary": "query  loanNot count",
        "description": "query loanNotCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "loanStatusArr",
            "in": "query",
            "description": "loanStatus arr",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/loan"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loan id"
          }
        }
      }
    },
    "/user/{userId}/loan": {
      "post": {
        "tags": [
          "loan"
        ],
        "summary": "user create loan",
        "description": "user create loan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loan",
            "in": "body",
            "description": "loan info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loan id"
          }
        }
      }
    },
    "/user/{userId}/loan/{loanId}": {
      "put": {
        "tags": [
          "loan"
        ],
        "summary": "update loan info",
        "description": "update loan info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanId",
            "in": "path",
            "description": "loan id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loan",
            "in": "body",
            "description": "loan info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loan"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loan id"
          }
        }
      }
    },
    "/user/{userId}/loan/{loanId}/loanStatus/{loanStatus}": {
      "put": {
        "tags": [
          "loan"
        ],
        "summary": "update loan status",
        "description": "update loan status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanId",
            "in": "path",
            "description": "loan id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanStatus",
            "in": "path",
            "description": "loan status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loan id"
          }
        }
      }
    },
    "/loanMortgageCarRel": {
      "get": {
        "tags": [
          "loan"
        ],
        "summary": "query  loanMortgageCarRel list",
        "description": "query loanMortgageCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "loanId",
            "in": "query",
            "description": "loan id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/loanMortgageCarRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanMortgageCarRel id"
          }
        }
      }
    },
    "/user/{userId}/loanMortgageCarRel": {
      "post": {
        "tags": [
          "loan"
        ],
        "summary": "user create loanMortgageCarRel",
        "description": "user create loanMortgageCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanMortgageCarRel",
            "in": "body",
            "description": "loanMortgageCarRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loanMortgageCarRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanMortgageCarRel id"
          }
        }
      }
    },
    "/user/{userId}/loan/{loanId}/car/{carId}": {
      "delete": {
        "tags": [
          "loan"
        ],
        "summary": "Deletes a loanMortgageCarRel",
        "description": "",
        "operationId": "deleteloanMortgageCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "loanId",
            "in": "path",
            "description": "loan id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/loanBuyCarRel": {
      "get": {
        "tags": [
          "loan"
        ],
        "summary": "query  loanBuyCarRel list",
        "description": "query loanBuyCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "loanId",
            "in": "query",
            "description": "loan id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/loanBuyCarRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanBuyCarRel id"
          }
        }
      }
    },
    "/user/{userId}/loanBuyCarRel": {
      "post": {
        "tags": [
          "loan"
        ],
        "summary": "user create loanBuyCarRel",
        "description": "user create loanBuyCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanBuyCarRel",
            "in": "body",
            "description": "loanBuyCarRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loanBuyCarRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanBuyCarRel id"
          }
        }
      }
    },
    "/user/{userId}/loan/{loanId}/car/{carId}/loanBuyCarRel": {
      "delete": {
        "tags": [
          "loan"
        ],
        "summary": "Deletes a loanBuyCarRel",
        "description": "",
        "operationId": "deleteLoanBuyCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "loanId",
            "in": "path",
            "description": "loan id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/loanRepayment": {
      "get": {
        "tags": [
          "loan"
        ],
        "summary": "query  loanRepayment list",
        "description": "query loanRepayment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repaymentId",
            "in": "query",
            "description": "repayment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "loanId",
            "in": "query",
            "description": "loan id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repaymentStatus",
            "in": "query",
            "description": "repayment status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "creditId",
            "in": "query",
            "description": "credit id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "paymentId",
            "in": "query",
            "description": "payment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOn start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOn end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/loanRepayment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanRepayment id"
          }
        }
      }
    },
    "/user/{userId}/loanRepayment": {
      "post": {
        "tags": [
          "loan"
        ],
        "summary": "user create loanRepayment",
        "description": "user create loanRepayment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanRepayment",
            "in": "body",
            "description": "loanRepayment info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loanRepayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanRepayment id"
          }
        }
      }
    },
    "/user/{userId}/repayment/{repaymentId}": {
      "put": {
        "tags": [
          "loan"
        ],
        "summary": "update loanRepayment info",
        "description": "update loanRepayment info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repaymentId",
            "in": "path",
            "description": "repayment id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanRepayment",
            "in": "body",
            "description": "loanRepayment info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loanRepayment"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid repayment id"
          }
        }
      }
    },
    "/user/{userId}/repayment/{repaymentId}/repaymentStatus/{repaymentStatus}": {
      "put": {
        "tags": [
          "loan"
        ],
        "summary": "update repayment status",
        "description": "update repayment status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repaymentId",
            "in": "path",
            "description": "repayment id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repaymentStatus",
            "in": "path",
            "description": "repayment status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid repayment id"
          }
        }
      }
    },
    "/loanRepCreditRel": {
      "get": {
        "tags": [
          "loan"
        ],
        "summary": "query  loanRepCreditRel list",
        "description": "query loanRepCreditRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repaymentId",
            "in": "query",
            "description": "repayment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/loanRepCreditRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanRepCreditRel id"
          }
        }
      }
    },
    "/user/{userId}/loanRepCreditRel": {
      "post": {
        "tags": [
          "loan"
        ],
        "summary": "user create loanRepCreditRel",
        "description": "user create loanRepCreditRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanRepCreditRel",
            "in": "body",
            "description": "loanRepCreditRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loanRepCreditRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanRepCreditRel id"
          }
        }
      }
    },
    "/user/{userId}/repayment/{repaymentId}/credit/{creditId}": {
      "delete": {
        "tags": [
          "loan"
        ],
        "summary": "Deletes a loanRepCreditRel",
        "description": "",
        "operationId": "deleteLoanRepCreditRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "repaymentId",
            "in": "path",
            "description": "repayment id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "creditId",
            "in": "path",
            "description": "credit id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/loanCompany": {
      "get": {
        "tags": [
          "loan"
        ],
        "summary": "query  loanCompany list",
        "description": "query loanCompany",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "loanCompanyId",
            "in": "query",
            "description": "loanCompany id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/loanCompany"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanCompany id"
          }
        }
      }
    },
    "/user/{userId}/loanCompany": {
      "post": {
        "tags": [
          "loan"
        ],
        "summary": "user create loanCompany",
        "description": "user create loanCompany",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanCompany",
            "in": "body",
            "description": "loanCompany info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loanCompany"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanCompany id"
          }
        }
      }
    },
    "/user/{userId}/loanCompany/{loanCompanyId}": {
      "put": {
        "tags": [
          "loan"
        ],
        "summary": "update loanCompany info",
        "description": "update loanCompany info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanCompanyId",
            "in": "path",
            "description": "loanCompany id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanCompany",
            "in": "body",
            "description": "loanCompany info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loanCompany"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanCompany id"
          }
        }
      }
    },
    "/user/{userId}/loanCompany/{loanCompanyId}/companyStatus/{companyStatus}": {
      "put": {
        "tags": [
          "loan"
        ],
        "summary": "update loanCompany status",
        "description": "update loanCompany status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loanCompanyId",
            "in": "path",
            "description": "loanCompany id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "companyStatus",
            "in": "path",
            "description": "company status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid loanCompany id"
          }
        }
      }
    },
    "/credit": {
      "get": {
        "tags": [
          "credit"
        ],
        "summary": "query  credit list",
        "description": "query credit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "creditId",
            "in": "query",
            "description": "credit id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "creditNumber",
            "in": "query",
            "description": "credit number",
            "required": false,
            "type": "string"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "repaymentId",
            "in": "query",
            "description": "repayment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "creditStatus",
            "in": "query",
            "description": "credit status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "planReturnDateStart",
            "in": "query",
            "description": "planReturnDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "planReturnDateEnd",
            "in": "query",
            "description": "planReturnDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualReturnDateStart",
            "in": "query",
            "description": "actualReturnDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualReturnDateEnd",
            "in": "query",
            "description": "actualReturnDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/credit"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid credit id"
          }
        }
      }
    },
    "/credit.csv": {
      "get": {
        "tags": [
          "credit"
        ],
        "summary": "query  credit.csv",
        "description": "query credit csv",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "creditId",
            "in": "query",
            "description": "credit id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "creditNumber",
            "in": "query",
            "description": "credit number",
            "required": false,
            "type": "string"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "repaymentId",
            "in": "query",
            "description": "repayment id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "creditStatus",
            "in": "query",
            "description": "credit status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "planReturnDateStart",
            "in": "query",
            "description": "planReturnDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "planReturnDateEnd",
            "in": "query",
            "description": "planReturnDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualReturnDateStart",
            "in": "query",
            "description": "actualReturnDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "actualReturnDateEnd",
            "in": "query",
            "description": "actualReturnDate end",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/credit"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid credit id"
          }
        }
      }
    },
    "/repayment/{repaymentId}/creditRepMoney": {
      "get": {
        "tags": [
          "credit"
        ],
        "summary": "query  creditRep money",
        "description": "query creditRepMoney",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repaymentId",
            "in": "path",
            "description": "repayment id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/credit"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid credit id"
          }
        }
      }
    },
    "/user/{userId}/credit": {
      "post": {
        "tags": [
          "credit"
        ],
        "summary": "user create credit",
        "description": "user create credit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "credit",
            "in": "body",
            "description": "credit info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/credit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid credit id"
          }
        }
      }
    },
    "/user/{userId}/credit/{creditId}": {
      "put": {
        "tags": [
          "credit"
        ],
        "summary": "update credit info",
        "description": "update credit info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "creditId",
            "in": "path",
            "description": "credit id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "credit",
            "in": "body",
            "description": "credit info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/credit"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid credit id"
          }
        }
      }
    },
    "/user/{userId}/credit/{creditId}/creditStatus/{creditStatus}": {
      "put": {
        "tags": [
          "credit"
        ],
        "summary": "update credit status",
        "description": "update credit status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "creditId",
            "in": "path",
            "description": "credit id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "creditStatus",
            "in": "path",
            "description": "credit status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid credit id"
          }
        }
      }
    },
    "/creditCarRel": {
      "get": {
        "tags": [
          "credit"
        ],
        "summary": "query  creditCarRel list",
        "description": "query creditCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "creditId",
            "in": "query",
            "description": "credit id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/creditCarRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid creditCarRel id"
          }
        }
      }
    },
    "/user/{userId}/creditCarRel": {
      "post": {
        "tags": [
          "credit"
        ],
        "summary": "user create creditCarRel",
        "description": "user create creditCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "creditCarRel",
            "in": "body",
            "description": "creditCarRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/creditCarRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid creditCarRel id"
          }
        }
      }
    },
    "/user/{userId}/credit/{creditId}/car/{carId}": {
      "delete": {
        "tags": [
          "credit"
        ],
        "summary": "Deletes a creditCarRel",
        "description": "",
        "operationId": "deletecreditCarRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "creditId",
            "in": "path",
            "description": "credit id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/app": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "query  app version ",
        "description": "query app",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "description": "app id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "app",
            "in": "query",
            "description": "app name :1-storage app",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "app type : 1-android,2-ios",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forceUpdate",
            "in": "query",
            "description": "app type : 0-no,1-yes",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/app"
              }
            }
          },
          "400": {
            "description": "Invalid token value "
          }
        }
      }
    },
    "/user/{userId}/app": {
      "post": {
        "tags": [
          "app"
        ],
        "summary": "user create app version ",
        "description": "user create app",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "appVersion",
            "in": "body",
            "description": "app version  info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid repairStation id"
          }
        }
      }
    },
    "/user/{userId}/app/{appId}": {
      "put": {
        "tags": [
          "app"
        ],
        "summary": "update app version info",
        "description": "update app version",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "appId",
            "in": "path",
            "description": "app verion id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "appVersion",
            "in": "body",
            "description": "app version info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid repairStation id"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://oauth.myxxjs.com/api",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "app": {
      "type": "object",
      "properties": {

        "app": {
          "type": "integer"
        },
        "appType": {
          "type": "integer"
        },
        "version": {
          "type": "string"
        },
        "versionNumber": {
          "type": "integer"
        },
        "floorVersionNumber": {
          "type": "integer"
        },
        "forceUpdate": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "app"
      }
    },
    "admin": {
      "type": "object",
      "required": [
        "id",
        "userName",
        "password"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "realName": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "description": "admin status",
          "enum": [
            "0",
            "1"
          ]
        }
      },
      "xml": {
        "name": "admin"
      }
    },
    "password": {
      "type": "object",
      "required": [
        "originPassword",
        "newPassword"
      ],
      "properties": {
        "originPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "password"
      }
    },
    "user": {
      "type": "object",
      "properties": {

        "mobile": {
          "type": "string"
        },
        "realName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        },
        "gender": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "truck": {
      "type": "object",
      "properties": {

        "truckNum": {
          "type": "string"
        },
        "brandId": {
          "type": "integer"
        },
        "truckTel": {
          "type": "string"
        },
        "theCode": {
          "type": "string"
        },
        "driveId": {
          "type": "integer"
        },
        "copilot": {
          "type": "string"
        },
        "companyId": {
          "type": "integer"
        },
        "truckType": {
          "type": "integer"
        },
        "relId": {
          "type": "integer"
        },
        "truckStatus": {
          "type": "integer"
        },
        "number": {
          "type": "string"
        },
        "drivingImage": {
          "type": "string"
        },
        "operationImage": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "truck"
      }
    },
    "drive": {
      "type": "object",
      "properties": {

        "driveName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "idNumber": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "companyId": {
          "type": "integer"
        },
        "licenseLevel": {
          "type": "string"
        },
        "licenseDate": {
          "type": "string"
        },
        "driveImage": {
          "type": "string"
        },
        "licenseImage": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "drive"
      }
    },
    "company": {
      "type": "object",
      "properties": {

        "companyName": {
          "type": "string"
        },
        "operateType": {
          "type": "integer"
        },
        "cooperationTime": {
          "type": "string"
        },
        "contacts": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "cityId": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "company"
      }
    },
    "city": {
      "type": "object",
      "properties": {

        "cityName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "city"
      }
    },
    "brand": {
      "type": "object",
      "properties": {

        "brandName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "brand"
      }
    },
    "storage": {
      "type": "object",
      "properties": {

        "storageName": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "storage"
      }
    },
    "storageArea": {
      "type": "object",
      "properties": {

        "areaName": {
          "type": "string"
        },
        "row": {
          "type": "integer"
        },
        "col": {
          "type": "integer"
        },
        "lot": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "storageArea"
      }
    },
    "storageOrder": {
      "type": "object",
      "properties": {

        "actualFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "storageOrder"
      }
    },
    "car": {
      "type": "object",
      "properties": {

        "vin": {
          "type": "string"
        },
        "makeId": {
          "type": "integer"
        },
        "makeName": {
          "type": "string"
        },
        "modelId": {
          "type": "integer"
        },
        "modelName": {
          "type": "string"
        },
        "proDate": {
          "type": "integer"
        },
        "colour": {
          "type": "string"
        },
        "engineNum": {
          "type": "string"
        },
        "entrustId": {
          "type": "integer"
        },
        "valuation": {
          "type": "integer"
        },
        "msoStatus": {
          "type": "integer"
        },
        "purchaseType": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "car"
      }
    },
    "carValuationMso": {
      "type": "object",
      "properties": {

        "valuation": {
          "type": "integer"
        },
        "msoStatus": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "carValuationMso"
      }
    },
    "vin": {
      "type": "object",
      "properties": {

        "vin": {
          "type": "string"
        }
      },
      "xml": {
        "name": "vin"
      }
    },
    "carStorageRel": {
      "type": "object",
      "properties": {

        "vin": {
          "type": "string"
        },
        "makeId": {
          "type": "integer"
        },
        "makeName": {
          "type": "string"
        },
        "modelId": {
          "type": "integer"
        },
        "modelName": {
          "type": "string"
        },
        "proDate": {
          "type": "integer"
        },
        "colour": {
          "type": "string"
        },
        "engineNum": {
          "type": "string"
        },
        "entrustId": {
          "type": "integer"
        },
        "valuation": {
          "type": "integer"
        },
        "msoStatus": {
          "type": "integer"
        },
        "purchaseType": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        },
        "parkingId": {
          "type": "integer"
        },
        "storageId": {
          "type": "integer"
        },
        "storageName": {
          "type": "string"
        },
        "planOutTime": {
          "type": "string"
        }
      },
      "xml": {
        "name": "carStorageRel"
      }
    },
    "againCarStorageRel": {
      "type": "object",
      "properties": {

        "parkingId": {
          "type": "integer"
        },
        "storageId": {
          "type": "integer"
        },
        "storageName": {
          "type": "string"
        },
        "planOutTime": {
          "type": "string"
        }
      },
      "xml": {
        "name": "againCarStorageRel"
      }
    },
    "planOutTime": {
      "type": "object",
      "properties": {

        "planOutTime": {
          "type": "string"
        }
      },
      "xml": {
        "name": "RelPlanOutTime"
      }
    },
    "carMake": {
      "type": "object",
      "properties": {

        "makeName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "carMake"
      }
    },
    "carModel": {
      "type": "object",
      "properties": {

        "modelName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "carModel"
      }
    },
    "carKeyCabinet": {
      "type": "object",
      "properties": {

        "keyCabinetName": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "carKeyCabinet"
      }
    },
    "carKeyCabinetArea": {
      "type": "object",
      "properties": {

        "areaName": {
          "type": "string"
        },
        "row": {
          "type": "integer"
        },
        "col": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "carKeyCabinetArea"
      }
    },
    "carKeyPosition": {
      "type": "object",
      "properties": {

        "carId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "carKeyPosition"
      }
    },
    "entrust": {
      "type": "object",
      "properties": {

        "shortName": {
          "type": "string"
        },
        "entrustName": {
          "type": "string"
        },
        "entrustType": {
          "type": "integer"
        },
        "contactsName": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "entrust"
      }
    },
    "port": {
      "type": "object",
      "properties": {

        "portName": {
          "type": "string"
        },
        "countryId": {
          "type": "integer"
        },
        "address": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "port"
      }
    },
    "shipCompany": {
      "type": "object",
      "properties": {

        "shipCompanyName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "shipCompany"
      }
    },
    "shipTrans": {
      "type": "object",
      "properties": {

        "startPortId": {
          "type": "integer"
        },
        "startPortName": {
          "type": "string"
        },
        "endPortId": {
          "type": "integer"
        },
        "endPortName": {
          "type": "string"
        },
        "startShipDate": {
          "type": "string"
        },
        "endShipDate": {
          "type": "string"
        },
        "shipCompanyId": {
          "type": "integer"
        },
        "shipName": {
          "type": "string"
        },
        "container": {
          "type": "string"
        },
        "booking": {
          "type": "string"
        },
        "tab": {
          "type": "string"
        },
        "partStatus": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        },
        "carIds": {
          "type": "integer"
        },
        "vins": {
          "type": "integer"
        },
        "entrustIds": {
          "type": "integer"
        },
        "shipTransFees": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "shipTrans"
      }
    },
    "shipTransOrder": {
      "type": "object",
      "properties": {

        "startPortId": {
          "type": "integer"
        },
        "startPortName": {
          "type": "string"
        },
        "endPortId": {
          "type": "integer"
        },
        "endPortName": {
          "type": "string"
        },
        "startShipDate": {
          "type": "string"
        },
        "endShipDate": {
          "type": "string"
        },
        "shipCompanyId": {
          "type": "integer"
        },
        "shipName": {
          "type": "string"
        },
        "container": {
          "type": "string"
        },
        "booking": {
          "type": "string"
        },
        "tab": {
          "type": "string"
        },
        "partStatus": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        },
        "carIds": {
          "type": "integer"
        },

        "shipTransFees": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "shipTransOrder"
      }
    },
    "shipTransOrderFee": {
      "type": "object",
      "properties": {

        "shipTransFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "shipTransOrderFee"
      }
    },
    "shipTransCarRel": {
      "type": "object",
      "properties": {

        "shipTransId": {
          "type": "integer"
        },
        "carId": {
          "type": "integer"
        },
        "vin": {
          "type": "string"
        },
        "entrustId": {
          "type": "integer"
        },
        "shipTransFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "shipTransCarRel"
      }
    },
    "payment": {
      "type": "object",
      "properties": {

        "entrustId": {
          "type": "integer"
        },
        "paymentType": {
          "type": "integer"
        },
        "number": {
          "type": "string"
        },
        "paymentMoney": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        },
        "storageOrderIds": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "payment"
      }
    },
    "paymentOrder": {
      "type": "object",
      "properties": {

        "entrustId": {
          "type": "integer"
        },
        "paymentType": {
          "type": "integer"
        },
        "number": {
          "type": "string"
        },
        "paymentMoney": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "paymentOrder"
      }
    },
    "paymentStorageOrderRel": {
      "type": "object",
      "properties": {

        "storageOrderId": {
          "type": "integer"
        },
        "paymentId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "paymentStorageOrderRel"
      }
    },
    "paymentShipOrderRel": {
      "type": "object",
      "properties": {

        "shipTransOrderId": {
          "type": "integer"
        },
        "paymentId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "paymentShipOrderRel"
      }
    },
    "paymentLoanRepRel": {
      "type": "object",
      "properties": {

        "repaymentId": {
          "type": "integer"
        },
        "paymentId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "paymentLoanRepRel"
      }
    },
    "paymentRepMoney": {
      "type": "object",
      "properties": {

        "thisPaymentMoney": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "paymentRepMoney"
      }
    },
    "loan": {
      "type": "object",
      "properties": {

        "entrustId": {
          "type": "integer"
        },
        "deposit": {
          "type": "integer"
        },
        "loanMoney": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "loan"
      }
    },
    "loanMortgageCarRel": {
      "type": "object",
      "properties": {

        "loanId": {
          "type": "integer"
        },
        "carId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "loanMortgageCarRel"
      }
    },
    "loanBuyCarRel": {
      "type": "object",
      "properties": {

        "loanId": {
          "type": "integer"
        },
        "carId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "loanBuyCarRel"
      }
    },
    "loanRepayment": {
      "type": "object",
      "properties": {

        "loanId": {
          "type": "integer"
        },
        "repaymentMoney": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "createInterestMoney": {
          "type": "integer"
        },
        "dayCount": {
          "type": "integer"
        },
        "interestMoney": {
          "type": "integer"
        },
        "fee": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "loanRepayment"
      }
    },
    "loanRepCreditRel": {
      "type": "object",
      "properties": {

        "repaymentId": {
          "type": "integer"
        },
        "creditId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "loanRepCreditRel"
      }
    },
    "loanCompany": {
      "type": "object",
      "properties": {

        "companyName": {
          "type": "string"
        },
        "baseMoney": {
          "type": "integer"
        },
        "contacts": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "loanCompany"
      }
    },
    "credit": {
      "type": "object",
      "properties": {

        "creditNumber": {
          "type": "string"
        },
        "entrustId": {
          "type": "integer"
        },
        "creditMoney": {
          "type": "integer"
        },
        "actualMoney": {
          "type": "integer"
        },
        "planReturnDate": {
          "type": "string"
        },
        "actualReturnDate": {
          "type": "string"
        },
        "receiveCardDate": {
          "type": "string"
        },
        "documentsDate": {
          "type": "string"
        },
        "documentsSendDate": {
          "type": "string"
        },
        "documentsReceiveDate": {
          "type": "string"
        },
        "actualRemitDate": {
          "type": "string"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "credit"
      }
    },
    "creditCarRel": {
      "type": "object",
      "properties": {

        "creditId": {
          "type": "integer"
        },
        "carId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "creditCarRel"
      }
    }
  },
  "externalDocs": {
    "description": "Find more on developer website",
    "url": "http://myxxjs.com"
  }
}